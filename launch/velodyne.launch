<?xml version="1.0"?>

<!-- Launch file to initialize VLP16 into pointcloud and slice pointcloud into laserscan -->

<launch>
    <!-- Source the kinetic repository and then the catkin_ws -->
    

    <!-- Call file to intialize pointcloud from VLP16 -->
    <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>

    <!-- Run pointcloud_to_laserscan package to slice up pointcloud -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/velodyne_points"/>
        <remap from="scan" to="/top/scan"/>
        <rosparam>
            <!-- Include parameters here for later use -->
        </rosparam>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_velodyne" args="0 0 0 0 0 0 /base_link /velodyne 100"/>

    <param name="pub_map_odom_transform" value="true"/>
    <param name="map_frame" value="map"/>
    <param name="base_frame" value="base_link"/>
    <param name="odom_frame" value="base_link"/>

    <!-- Run hector mapping to take laser_scan and build map -->
    <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" output="screen">
        <param name="use_tf_scan_transformation" value="true" />
        <param name="use_tf_pose_start_estimate" value="false" />
        <param name="base_frame" value="base_link" />
        <param name="odom_frame" value="base_link" />
        <param name="pub_map_odom_transform" value="true" />
        <param name="scan_subscriber_queue_size" value="25" />

        <param name="map_resolution" value="0.050" />
        <param name="map_size" value="2048" />
        <param name="map_start_x" value="0.5" />
        <param name="map_start_y" value="0.5" />
        <param name="map_multi_res_levels" value="2" />

        <param name="update_factor_free" value="0.4" />
        <param name="update_factor_occupied" value="0.9" />
        <param name="map_update_distance_thresh" value="0.0006" />
        <param name="advertise_map_service" value="true" /> 
        <param name="scan_subscriber_queue_size" value="5" />
        <param name="scan_topic" value="top/scan" />

        <param name=" tf_map_scanmatch_transform_frame_name" value="scanmatcher_frame" />
    </node>
</launch>
